2021-09-26 00:38:19 DEBUG QueryTranslatorImpl:259 - SQL: select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:38:19 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:38:19 DEBUG SQL:144 - select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:38:19 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:38:19 DEBUG Loader:1595 - Result row: EntityKey[entities.Status#3]
2021-09-26 00:38:19 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Status#3]
2021-09-26 00:38:19 DEBUG TwoPhaseLoad:184 - Processing attribute `alias` : value = Visa
2021-09-26 00:38:19 DEBUG TwoPhaseLoad:215 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-09-26 00:38:19 DEBUG TwoPhaseLoad:184 - Processing attribute `description` : value = Debit
2021-09-26 00:38:19 DEBUG TwoPhaseLoad:215 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-09-26 00:38:19 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Status#3]
2021-09-26 00:38:19 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:38:19 INFO  Main:49 - MainClass works
2021-09-26 00:40:32 DEBUG ClientService:22 - ClientDao configured
2021-09-26 00:40:32 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-09-26 00:40:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:40:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:40:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:40:32 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.5.7.Final
2021-09-26 00:40:32 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-09-26 00:40:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:40:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:40:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:40:32 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-09-26 00:40:32 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
2021-09-26 00:40:32 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-09-26 00:40:32 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-09-26 00:40:32 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@239105a8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@560348e6
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@37911f88
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51c693d
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28b46423
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45d2ade3
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b45c0e
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e3d57c7
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b8b43c7
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7ceb3185
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@768fc0f2
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4ddbbdf8
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74a6f9c1
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@600b9d27
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@457c9034
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7daa0fbd
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@be68757
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d446ed1
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12d2ce03
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7e5c856f
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@413f69cc
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f53a5dc
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b75c2e3
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1984b1f
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:40:32 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-09-26 00:40:32 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-09-26 00:40:32 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/ievhenbondarew]
2021-09-26 00:40:32 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=postgres}
2021-09-26 00:40:32 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-09-26 00:40:32 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-09-26 00:40:32 INFO  DriverManagerConnectionProviderImpl:274 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-09-26 00:40:32 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.3
      major : 13
      minor : 3
2021-09-26 00:40:32 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-09-26 00:40:32 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-09-26 00:40:32 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-09-26 00:40:32 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-09-26 00:40:32 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:40:32 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:40:32 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@242aa8d9]
2021-09-26 00:40:32 DEBUG AnnotationMetadataSourceProcessorImpl:125 - Encountered a non-categorized annotated class [entities.ClientStatus]; ignoring
2021-09-26 00:40:32 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Client
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:40:32 DEBUG EntityBinder:431 - Import with entity name Client
2021-09-26 00:40:32 DEBUG EntityBinder:874 - Bind entity entities.Client on table clients
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:id]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:40:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:about]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property about
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=age, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property age with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:age]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for age
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property age
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:email]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property email
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:name]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property name
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:phone]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property phone
2021-09-26 00:40:32 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Account
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:40:32 DEBUG EntityBinder:431 - Import with entity name Account
2021-09-26 00:40:32 DEBUG EntityBinder:874 - Bind entity entities.Account on table accounts
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:id]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:40:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:clientId]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property clientId
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:number]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property number
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:value]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property value
2021-09-26 00:40:32 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Status
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:40:32 DEBUG EntityBinder:431 - Import with entity name Status
2021-09-26 00:40:32 DEBUG EntityBinder:874 - Bind entity entities.Status on table statuses
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:id]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:40:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:alias]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property alias
2021-09-26 00:40:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-09-26 00:40:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:description]
2021-09-26 00:40:32 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-09-26 00:40:32 DEBUG PropertyBinder:266 - Building property description
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for age
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-09-26 00:40:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-09-26 00:40:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-09-26 00:40:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-09-26 00:40:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-09-26 00:40:32 DEBUG SessionFactoryImpl:206 - Building session factory
2021-09-26 00:40:32 DEBUG Settings:68 - SessionFactory name : null
2021-09-26 00:40:32 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-09-26 00:40:32 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-09-26 00:40:32 DEBUG Settings:72 - Statistics: disabled
2021-09-26 00:40:32 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-09-26 00:40:32 DEBUG Settings:75 - Default entity-mode: pojo
2021-09-26 00:40:32 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-09-26 00:40:32 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-09-26 00:40:32 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-09-26 00:40:32 DEBUG Settings:80 - Default batch fetch size: -1
2021-09-26 00:40:32 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-09-26 00:40:32 DEBUG Settings:82 - Default null ordering: NONE
2021-09-26 00:40:32 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-09-26 00:40:32 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-09-26 00:40:32 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-09-26 00:40:32 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-09-26 00:40:32 DEBUG Settings:90 - Query language substitutions: {}
2021-09-26 00:40:32 DEBUG Settings:91 - Named query checking : enabled
2021-09-26 00:40:32 DEBUG Settings:93 - Second-level cache: disabled
2021-09-26 00:40:32 DEBUG Settings:94 - Second-level query cache: disabled
2021-09-26 00:40:32 DEBUG Settings:95 - Second-level query cache factory: null
2021-09-26 00:40:32 DEBUG Settings:96 - Second-level cache region prefix: null
2021-09-26 00:40:32 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-09-26 00:40:32 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-09-26 00:40:32 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-09-26 00:40:32 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-09-26 00:40:32 DEBUG Settings:102 - JDBC batch size: 15
2021-09-26 00:40:32 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-09-26 00:40:32 DEBUG Settings:104 - Scrollable result sets: enabled
2021-09-26 00:40:32 DEBUG Settings:105 - Wrap result sets: disabled
2021-09-26 00:40:32 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-09-26 00:40:32 DEBUG Settings:107 - JDBC result set fetch size: null
2021-09-26 00:40:32 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-09-26 00:40:32 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-09-26 00:40:32 DEBUG Settings:111 - JPA compliance - query : disabled
2021-09-26 00:40:32 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-09-26 00:40:32 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-09-26 00:40:32 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-09-26 00:40:32 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:40:32 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:40:32 DEBUG SessionFactoryImpl:268 - Session factory constructed with filter configurations : {}
2021-09-26 00:40:32 DEBUG SessionFactoryImpl:269 - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/ievhenbondarew/Desktop/homework/target/classes:/Users/ievhenbondarew/.m2/repository/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar:/Users/ievhenbondarew/.m2/repository/org/postgresql/postgresql/42.2.23/postgresql-42.2.23.jar:/Users/ievhenbondarew/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/ievhenbondarew/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/ievhenbondarew/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/hibernate-core/5.5.7.Final/hibernate-core-5.5.7.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/ievhenbondarew/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/ievhenbondarew/.m2/repository/net/bytebuddy/byte-buddy/1.11.12/byte-buddy-1.11.12.jar:/Users/ievhenbondarew/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/ievhenbondarew/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/ievhenbondarew/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/ievhenbondarew/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/ievhenbondarew/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar, java.vm.vendor=BellSoft, sun.arch.data.model=64, java.vendor.url=https://bell-sw.com/, user.timezone=Europe/Kiev, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=UA, sun.boot.library.path=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11/lib, sun.java.command=Main, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/ievhenbondarew, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.11+9-LTS, user.name=ievhenbondarew, path.separator=:, hibernate.connection.username=****, os.version=11.4, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/ievhenbondarew, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bell-sw.com/support, java.io.tmpdir=/var/folders/t2/y3sz4nhj1rsgzf_xlsrnth7c0000gn/T/, java.version=11.0.11, user.dir=/Users/ievhenbondarew/Desktop/homework, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@742d4e15, java.library.path=/Users/ievhenbondarew/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=BellSoft, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
2021-09-26 00:40:32 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-09-26 00:40:32 DEBUG SessionFactoryImpl:309 - Instantiated session factory
2021-09-26 00:40:32 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@654b72c0]
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:40:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Account
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4005 -  Version select: select id from accounts where id =?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-09-26 00:40:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573284a5]
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-09-26 00:40:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:40:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:40:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Account)
    - Returns
       - EntityReturnImpl(entity=entities.Account, querySpaceUid=<gen:0>, path=entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-09-26 00:40:32 DEBUG EntityLoader:129 - Static select for entity entities.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Status
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4005 -  Version select: select id from statuses where id =?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-09-26 00:40:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@783115d9]
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-09-26 00:40:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:40:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:40:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Status)
    - Returns
       - EntityReturnImpl(entity=entities.Status, querySpaceUid=<gen:0>, path=entities.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-09-26 00:40:32 DEBUG EntityLoader:129 - Static select for entity entities.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Client
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4005 -  Version select: select id from clients where id =?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.age as age3_1_, client_.email as email4_1_, client_.name as name5_1_, client_.phone as phone6_1_ from clients client_ where client_.id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, age, email, name, phone, id) values (?, ?, ?, ?, ?, ?)
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, age=?, email=?, name=?, phone=? where id=?
2021-09-26 00:40:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-09-26 00:40:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@95bb2a2]
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : age
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-09-26 00:40:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-09-26 00:40:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:40:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:40:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Client)
    - Returns
       - EntityReturnImpl(entity=entities.Client, querySpaceUid=<gen:0>, path=entities.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-09-26 00:40:32 DEBUG EntityLoader:129 - Static select for entity entities.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.age as age3_1_0_, client0_.email as email4_1_0_, client0_.name as name5_1_0_, client0_.phone as phone6_1_0_ from clients client0_ where client0_.id=?
2021-09-26 00:40:32 DEBUG SchemaManagementToolCoordinator:65 - No actions specified; doing nothing
2021-09-26 00:40:32 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-09-26 00:40:32 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-09-26 00:40:32 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:40:32 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4096aa05
2021-09-26 00:40:32 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: a78cdcc1-db6a-4b2f-8be6-372f223d3b85 (<unnamed>)
2021-09-26 00:40:32 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-09-26 00:40:32 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-09-26 00:40:32 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@260a3a5e
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where id =6
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '6'

2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:40:32 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:40:32 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> client0_.id
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:40:32 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.id {synthetic-alias} id ) 6 ) ) )
2021-09-26 00:40:32 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:40:32 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:40:32 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '6'

2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where id =6
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:40:32 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:40:32 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#6]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#6]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = ikea@ukr.net
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ikea
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089095
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#6]
2021-09-26 00:40:32 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where phone =380958089091
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'phone'
          \-[NUM_INT] Node: '380958089091'

2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:40:32 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:40:32 DEBUG DotNode:696 - getDataType() : phone -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.phone -> client0_.phone
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:40:32 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.phone {synthetic-alias} phone ) 380958089091 ) ) )
2021-09-26 00:40:32 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:40:32 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.phone
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: phone
          \-LiteralNode

2021-09-26 00:40:32 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.phone' {propertyName=phone,dereferenceType=PRIMITIVE,getPropertyPath=phone,path={synthetic-alias}.phone,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'phone' {originalText=phone}
          \-[NUM_INT] LiteralNode: '380958089091'

2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where phone =380958089091
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089091
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089091
2021-09-26 00:40:32 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:40:32 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#2]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#2]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = alex@ukr.net
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ali
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089091
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#2]
2021-09-26 00:40:32 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:40:32 DEBUG AccountService:23 - AccountDao configured
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Account where id =5
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '5'

2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:40:32 DEBUG FromElement:153 - FromClause{level=1} : entities.Account (<no alias>) -> account0_
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:40:32 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> account0_.id
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:40:32 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} accounts account0_ ) ( where ( = ( account0_.id {synthetic-alias} id ) 5 ) ) )
2021-09-26 00:40:32 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:40:32 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [accounts]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Account)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Account)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Account)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:40:32 DEBUG JoinProcessor:304 - Using FROM fragment [accounts account0_]
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (accounts)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'account0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'accounts account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=account0_,className=entities.Account,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '5'

2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Account where id =5
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:259 - SQL: select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG SQL:144 - select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:40:32 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:40:32 DEBUG Loader:1595 - Result row: EntityKey[entities.Account#5]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Account#5]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `clientId` : value = 5
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`clientId`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `number` : value = UA2132231300000266
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`number`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `value` : value = 220000.0
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`value`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Account#5]
2021-09-26 00:40:32 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:40:32 DEBUG StatusService:23 - StatusDao configured
2021-09-26 00:40:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:40:32 DEBUG TransactionImpl:81 - begin
2021-09-26 00:40:32 DEBUG TransactionImpl:98 - committing
2021-09-26 00:40:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:40:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:40:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-09-26 00:40:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:40:32 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:40:32 DEBUG EntityPrinter:117 - entities.Status{alias=BUSINESS, description=MASTERCARD PLATINUM, id=3}
2021-09-26 00:40:32 DEBUG SQL:144 - update statuses set alias=?, description=? where id=?
2021-09-26 00:40:32 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:40:32 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Status where id =3
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '3'

2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:40:32 DEBUG FromElement:153 - FromClause{level=1} : entities.Status (<no alias>) -> status0_
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:40:32 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> status0_.id
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:40:32 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} statuses status0_ ) ( where ( = ( status0_.id {synthetic-alias} id ) 3 ) ) )
2021-09-26 00:40:32 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:40:32 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Status): [statuses]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Status)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Status)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Status)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:40:32 DEBUG JoinProcessor:304 - Using FROM fragment [statuses status0_]
2021-09-26 00:40:32 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (statuses)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'status0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}}
    |  \-[SQL_TOKEN] SqlFragment: 'status0_.alias as alias2_2_, status0_.description as descript3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[status0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'statuses status0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'status0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=status0_,className=entities.Status,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '3'

2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Status where id =3
2021-09-26 00:40:32 DEBUG QueryTranslatorImpl:259 - SQL: select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:40:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:32 DEBUG SQL:144 - select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:40:32 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:40:32 DEBUG Loader:1595 - Result row: EntityKey[entities.Status#3]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Status#3]
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `alias` : value = BUSINESS
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:184 - Processing attribute `description` : value = MASTERCARD PLATINUM
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:215 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-09-26 00:40:32 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Status#3]
2021-09-26 00:40:32 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:40:32 INFO  Main:49 - MainClass works
2021-09-26 00:40:59 DEBUG ClientService:22 - ClientDao configured
2021-09-26 00:40:59 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-09-26 00:40:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:40:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:40:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:40:59 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.5.7.Final
2021-09-26 00:40:59 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-09-26 00:40:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:40:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:40:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:40:59 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-09-26 00:40:59 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
2021-09-26 00:40:59 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-09-26 00:40:59 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-09-26 00:40:59 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@239105a8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@560348e6
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@37911f88
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51c693d
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28b46423
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45d2ade3
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b45c0e
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e3d57c7
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b8b43c7
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7ceb3185
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@768fc0f2
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4ddbbdf8
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74a6f9c1
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@600b9d27
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@457c9034
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7daa0fbd
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@be68757
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d446ed1
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12d2ce03
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7e5c856f
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@413f69cc
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f53a5dc
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b75c2e3
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1984b1f
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:40:59 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-09-26 00:40:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-09-26 00:40:59 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/ievhenbondarew]
2021-09-26 00:40:59 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=postgres}
2021-09-26 00:40:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-09-26 00:40:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-09-26 00:40:59 INFO  DriverManagerConnectionProviderImpl:274 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-09-26 00:40:59 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.3
      major : 13
      minor : 3
2021-09-26 00:40:59 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-09-26 00:40:59 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-09-26 00:40:59 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-09-26 00:40:59 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-09-26 00:40:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:40:59 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:40:59 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@242aa8d9]
2021-09-26 00:40:59 DEBUG AnnotationMetadataSourceProcessorImpl:125 - Encountered a non-categorized annotated class [entities.ClientStatus]; ignoring
2021-09-26 00:40:59 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Client
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:40:59 DEBUG EntityBinder:431 - Import with entity name Client
2021-09-26 00:40:59 DEBUG EntityBinder:874 - Bind entity entities.Client on table clients
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:id]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:40:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:about]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property about
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=age, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property age with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:age]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for age
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property age
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:email]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property email
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:name]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property name
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:phone]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property phone
2021-09-26 00:40:59 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Account
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:40:59 DEBUG EntityBinder:431 - Import with entity name Account
2021-09-26 00:40:59 DEBUG EntityBinder:874 - Bind entity entities.Account on table accounts
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:id]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:40:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:clientId]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property clientId
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:number]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property number
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:value]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property value
2021-09-26 00:40:59 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Status
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:40:59 DEBUG EntityBinder:431 - Import with entity name Status
2021-09-26 00:40:59 DEBUG EntityBinder:874 - Bind entity entities.Status on table statuses
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:id]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:40:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:alias]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property alias
2021-09-26 00:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-09-26 00:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-09-26 00:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:description]
2021-09-26 00:40:59 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-09-26 00:40:59 DEBUG PropertyBinder:266 - Building property description
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for age
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-09-26 00:40:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-09-26 00:40:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-09-26 00:40:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-09-26 00:40:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-09-26 00:40:59 DEBUG SessionFactoryImpl:206 - Building session factory
2021-09-26 00:40:59 DEBUG Settings:68 - SessionFactory name : null
2021-09-26 00:40:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-09-26 00:40:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-09-26 00:40:59 DEBUG Settings:72 - Statistics: disabled
2021-09-26 00:40:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-09-26 00:40:59 DEBUG Settings:75 - Default entity-mode: pojo
2021-09-26 00:40:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-09-26 00:40:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-09-26 00:40:59 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-09-26 00:40:59 DEBUG Settings:80 - Default batch fetch size: -1
2021-09-26 00:40:59 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-09-26 00:40:59 DEBUG Settings:82 - Default null ordering: NONE
2021-09-26 00:40:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-09-26 00:40:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-09-26 00:40:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-09-26 00:40:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-09-26 00:40:59 DEBUG Settings:90 - Query language substitutions: {}
2021-09-26 00:40:59 DEBUG Settings:91 - Named query checking : enabled
2021-09-26 00:40:59 DEBUG Settings:93 - Second-level cache: disabled
2021-09-26 00:40:59 DEBUG Settings:94 - Second-level query cache: disabled
2021-09-26 00:40:59 DEBUG Settings:95 - Second-level query cache factory: null
2021-09-26 00:40:59 DEBUG Settings:96 - Second-level cache region prefix: null
2021-09-26 00:40:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-09-26 00:40:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-09-26 00:40:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-09-26 00:40:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-09-26 00:40:59 DEBUG Settings:102 - JDBC batch size: 15
2021-09-26 00:40:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-09-26 00:40:59 DEBUG Settings:104 - Scrollable result sets: enabled
2021-09-26 00:40:59 DEBUG Settings:105 - Wrap result sets: disabled
2021-09-26 00:40:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-09-26 00:40:59 DEBUG Settings:107 - JDBC result set fetch size: null
2021-09-26 00:40:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-09-26 00:40:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-09-26 00:40:59 DEBUG Settings:111 - JPA compliance - query : disabled
2021-09-26 00:40:59 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-09-26 00:40:59 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-09-26 00:40:59 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-09-26 00:40:59 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:40:59 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:40:59 DEBUG SessionFactoryImpl:268 - Session factory constructed with filter configurations : {}
2021-09-26 00:40:59 DEBUG SessionFactoryImpl:269 - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/ievhenbondarew/Desktop/homework/target/classes:/Users/ievhenbondarew/.m2/repository/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar:/Users/ievhenbondarew/.m2/repository/org/postgresql/postgresql/42.2.23/postgresql-42.2.23.jar:/Users/ievhenbondarew/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/ievhenbondarew/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/ievhenbondarew/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/hibernate-core/5.5.7.Final/hibernate-core-5.5.7.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/ievhenbondarew/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/ievhenbondarew/.m2/repository/net/bytebuddy/byte-buddy/1.11.12/byte-buddy-1.11.12.jar:/Users/ievhenbondarew/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/ievhenbondarew/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/ievhenbondarew/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/ievhenbondarew/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/ievhenbondarew/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar, java.vm.vendor=BellSoft, sun.arch.data.model=64, java.vendor.url=https://bell-sw.com/, user.timezone=Europe/Kiev, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=UA, sun.boot.library.path=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11/lib, sun.java.command=Main, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/ievhenbondarew, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.11+9-LTS, user.name=ievhenbondarew, path.separator=:, hibernate.connection.username=****, os.version=11.4, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/ievhenbondarew, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bell-sw.com/support, java.io.tmpdir=/var/folders/t2/y3sz4nhj1rsgzf_xlsrnth7c0000gn/T/, java.version=11.0.11, user.dir=/Users/ievhenbondarew/Desktop/homework, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@742d4e15, java.library.path=/Users/ievhenbondarew/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=BellSoft, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
2021-09-26 00:40:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-09-26 00:40:59 DEBUG SessionFactoryImpl:309 - Instantiated session factory
2021-09-26 00:40:59 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@654b72c0]
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Account
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4005 -  Version select: select id from accounts where id =?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-09-26 00:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573284a5]
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-09-26 00:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Account)
    - Returns
       - EntityReturnImpl(entity=entities.Account, querySpaceUid=<gen:0>, path=entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-09-26 00:40:59 DEBUG EntityLoader:129 - Static select for entity entities.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Status
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4005 -  Version select: select id from statuses where id =?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-09-26 00:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@783115d9]
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-09-26 00:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Status)
    - Returns
       - EntityReturnImpl(entity=entities.Status, querySpaceUid=<gen:0>, path=entities.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-09-26 00:40:59 DEBUG EntityLoader:129 - Static select for entity entities.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Client
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4005 -  Version select: select id from clients where id =?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.age as age3_1_, client_.email as email4_1_, client_.name as name5_1_, client_.phone as phone6_1_ from clients client_ where client_.id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, age, email, name, phone, id) values (?, ?, ?, ?, ?, ?)
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, age=?, email=?, name=?, phone=? where id=?
2021-09-26 00:40:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-09-26 00:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@95bb2a2]
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : age
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-09-26 00:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-09-26 00:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Client)
    - Returns
       - EntityReturnImpl(entity=entities.Client, querySpaceUid=<gen:0>, path=entities.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-09-26 00:40:59 DEBUG EntityLoader:129 - Static select for entity entities.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.age as age3_1_0_, client0_.email as email4_1_0_, client0_.name as name5_1_0_, client0_.phone as phone6_1_0_ from clients client0_ where client0_.id=?
2021-09-26 00:40:59 DEBUG SchemaManagementToolCoordinator:65 - No actions specified; doing nothing
2021-09-26 00:40:59 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-09-26 00:40:59 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-09-26 00:40:59 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:40:59 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4096aa05
2021-09-26 00:40:59 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 78df594a-50fd-4460-ad8a-3d1a268fd1ef (<unnamed>)
2021-09-26 00:40:59 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-09-26 00:40:59 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-09-26 00:40:59 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@260a3a5e
2021-09-26 00:40:59 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where id =6
2021-09-26 00:40:59 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:59 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '6'

2021-09-26 00:40:59 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:40:59 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:40:59 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:40:59 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:40:59 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> client0_.id
2021-09-26 00:40:59 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:40:59 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.id {synthetic-alias} id ) 6 ) ) )
2021-09-26 00:40:59 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:40:59 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:40:59 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:40:59 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:40:59 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '6'

2021-09-26 00:40:59 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:59 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where id =6
2021-09-26 00:40:59 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:40:59 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:40:59 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:41:00 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:41:00 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#6]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#6]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = ikea@ukr.net
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ikea
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089095
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#6]
2021-09-26 00:41:00 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where phone =380958089091
2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'phone'
          \-[NUM_INT] Node: '380958089091'

2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:41:00 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:41:00 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:41:00 DEBUG DotNode:696 - getDataType() : phone -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:41:00 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.phone -> client0_.phone
2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:41:00 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.phone {synthetic-alias} phone ) 380958089091 ) ) )
2021-09-26 00:41:00 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:41:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.phone
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: phone
          \-LiteralNode

2021-09-26 00:41:00 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.phone' {propertyName=phone,dereferenceType=PRIMITIVE,getPropertyPath=phone,path={synthetic-alias}.phone,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'phone' {originalText=phone}
          \-[NUM_INT] LiteralNode: '380958089091'

2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where phone =380958089091
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089091
2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089091
2021-09-26 00:41:00 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:41:00 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#2]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#2]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = alex@ukr.net
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ali
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089091
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#2]
2021-09-26 00:41:00 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:41:00 DEBUG AccountService:23 - AccountDao configured
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Account where id =5
2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '5'

2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:41:00 DEBUG FromElement:153 - FromClause{level=1} : entities.Account (<no alias>) -> account0_
2021-09-26 00:41:00 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:41:00 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:41:00 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> account0_.id
2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:41:00 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} accounts account0_ ) ( where ( = ( account0_.id {synthetic-alias} id ) 5 ) ) )
2021-09-26 00:41:00 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:41:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [accounts]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Account)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Account)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Account)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:41:00 DEBUG JoinProcessor:304 - Using FROM fragment [accounts account0_]
2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (accounts)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'account0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'accounts account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=account0_,className=entities.Account,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '5'

2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Account where id =5
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:259 - SQL: select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG SQL:144 - select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:41:00 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:41:00 DEBUG Loader:1595 - Result row: EntityKey[entities.Account#5]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Account#5]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `clientId` : value = 5
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`clientId`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `number` : value = UA2132231300000266
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`number`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `value` : value = 220000.0
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`value`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Account#5]
2021-09-26 00:41:00 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:41:00 DEBUG StatusService:23 - StatusDao configured
2021-09-26 00:41:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:41:00 DEBUG TransactionImpl:81 - begin
2021-09-26 00:41:00 DEBUG TransactionImpl:98 - committing
2021-09-26 00:41:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:41:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:41:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-09-26 00:41:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:41:00 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:41:00 DEBUG EntityPrinter:117 - entities.Status{alias=BUSINESS, description=MASTERCARD PLATINUM, id=3}
2021-09-26 00:41:00 DEBUG SQL:144 - update statuses set alias=?, description=? where id=?
2021-09-26 00:41:00 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:41:00 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Status where id =3
2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '3'

2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:41:00 DEBUG FromElement:153 - FromClause{level=1} : entities.Status (<no alias>) -> status0_
2021-09-26 00:41:00 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:41:00 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:41:00 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> status0_.id
2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:41:00 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} statuses status0_ ) ( where ( = ( status0_.id {synthetic-alias} id ) 3 ) ) )
2021-09-26 00:41:00 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:41:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Status): [statuses]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Status)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Status)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Status)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:41:00 DEBUG JoinProcessor:304 - Using FROM fragment [statuses status0_]
2021-09-26 00:41:00 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (statuses)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'status0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}}
    |  \-[SQL_TOKEN] SqlFragment: 'status0_.alias as alias2_2_, status0_.description as descript3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[status0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'statuses status0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'status0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=status0_,className=entities.Status,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '3'

2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Status where id =3
2021-09-26 00:41:00 DEBUG QueryTranslatorImpl:259 - SQL: select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:41:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:41:00 DEBUG SQL:144 - select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:41:00 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:41:00 DEBUG Loader:1595 - Result row: EntityKey[entities.Status#3]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Status#3]
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `alias` : value = BUSINESS
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:184 - Processing attribute `description` : value = MASTERCARD PLATINUM
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:215 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-09-26 00:41:00 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Status#3]
2021-09-26 00:41:00 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:41:00 INFO  Main:49 - MainClass works
2021-09-26 00:42:11 DEBUG ClientService:22 - ClientDao configured
2021-09-26 00:42:11 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-09-26 00:42:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:42:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:42:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:42:11 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.5.7.Final
2021-09-26 00:42:11 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-09-26 00:42:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:42:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:42:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:42:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-09-26 00:42:11 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
2021-09-26 00:42:11 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-09-26 00:42:11 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-09-26 00:42:11 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@239105a8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@560348e6
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@37911f88
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51c693d
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28b46423
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45d2ade3
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b45c0e
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e3d57c7
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b8b43c7
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7ceb3185
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@768fc0f2
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4ddbbdf8
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74a6f9c1
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@600b9d27
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@457c9034
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7daa0fbd
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@be68757
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d446ed1
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12d2ce03
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7e5c856f
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@413f69cc
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f53a5dc
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b75c2e3
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1984b1f
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:42:11 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-09-26 00:42:11 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-09-26 00:42:11 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/ievhenbondarew]
2021-09-26 00:42:11 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=postgres}
2021-09-26 00:42:11 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-09-26 00:42:11 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-09-26 00:42:11 INFO  DriverManagerConnectionProviderImpl:274 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-09-26 00:42:11 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.3
      major : 13
      minor : 3
2021-09-26 00:42:11 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-09-26 00:42:11 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-09-26 00:42:11 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-09-26 00:42:11 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-09-26 00:42:11 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:42:11 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:42:11 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@242aa8d9]
2021-09-26 00:42:11 DEBUG AnnotationMetadataSourceProcessorImpl:125 - Encountered a non-categorized annotated class [entities.ClientStatus]; ignoring
2021-09-26 00:42:11 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Client
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:42:11 DEBUG EntityBinder:431 - Import with entity name Client
2021-09-26 00:42:11 DEBUG EntityBinder:874 - Bind entity entities.Client on table clients
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:42:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:id]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:42:11 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:about]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property about
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=age, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property age with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:age]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for age
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property age
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:email]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property email
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:name]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property name
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:phone]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property phone
2021-09-26 00:42:11 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Account
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:42:11 DEBUG EntityBinder:431 - Import with entity name Account
2021-09-26 00:42:11 DEBUG EntityBinder:874 - Bind entity entities.Account on table accounts
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:42:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:id]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:42:11 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:clientId]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property clientId
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:number]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property number
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:value]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property value
2021-09-26 00:42:11 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Status
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:42:11 DEBUG EntityBinder:431 - Import with entity name Status
2021-09-26 00:42:11 DEBUG EntityBinder:874 - Bind entity entities.Status on table statuses
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:42:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:id]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:42:11 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:alias]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property alias
2021-09-26 00:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-09-26 00:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-09-26 00:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:description]
2021-09-26 00:42:11 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-09-26 00:42:11 DEBUG PropertyBinder:266 - Building property description
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for age
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-09-26 00:42:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-09-26 00:42:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-09-26 00:42:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-09-26 00:42:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-09-26 00:42:11 DEBUG SessionFactoryImpl:206 - Building session factory
2021-09-26 00:42:11 DEBUG Settings:68 - SessionFactory name : null
2021-09-26 00:42:11 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-09-26 00:42:11 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-09-26 00:42:11 DEBUG Settings:72 - Statistics: disabled
2021-09-26 00:42:11 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-09-26 00:42:11 DEBUG Settings:75 - Default entity-mode: pojo
2021-09-26 00:42:11 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-09-26 00:42:11 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-09-26 00:42:11 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-09-26 00:42:11 DEBUG Settings:80 - Default batch fetch size: -1
2021-09-26 00:42:11 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-09-26 00:42:11 DEBUG Settings:82 - Default null ordering: NONE
2021-09-26 00:42:11 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-09-26 00:42:11 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-09-26 00:42:11 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-09-26 00:42:11 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-09-26 00:42:11 DEBUG Settings:90 - Query language substitutions: {}
2021-09-26 00:42:11 DEBUG Settings:91 - Named query checking : enabled
2021-09-26 00:42:11 DEBUG Settings:93 - Second-level cache: disabled
2021-09-26 00:42:11 DEBUG Settings:94 - Second-level query cache: disabled
2021-09-26 00:42:11 DEBUG Settings:95 - Second-level query cache factory: null
2021-09-26 00:42:11 DEBUG Settings:96 - Second-level cache region prefix: null
2021-09-26 00:42:11 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-09-26 00:42:11 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-09-26 00:42:11 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-09-26 00:42:11 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-09-26 00:42:11 DEBUG Settings:102 - JDBC batch size: 15
2021-09-26 00:42:11 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-09-26 00:42:11 DEBUG Settings:104 - Scrollable result sets: enabled
2021-09-26 00:42:11 DEBUG Settings:105 - Wrap result sets: disabled
2021-09-26 00:42:11 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-09-26 00:42:11 DEBUG Settings:107 - JDBC result set fetch size: null
2021-09-26 00:42:11 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-09-26 00:42:11 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-09-26 00:42:11 DEBUG Settings:111 - JPA compliance - query : disabled
2021-09-26 00:42:11 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-09-26 00:42:11 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-09-26 00:42:11 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-09-26 00:42:11 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:42:11 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:42:11 DEBUG SessionFactoryImpl:268 - Session factory constructed with filter configurations : {}
2021-09-26 00:42:11 DEBUG SessionFactoryImpl:269 - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/ievhenbondarew/Desktop/homework/target/classes:/Users/ievhenbondarew/.m2/repository/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar:/Users/ievhenbondarew/.m2/repository/org/postgresql/postgresql/42.2.23/postgresql-42.2.23.jar:/Users/ievhenbondarew/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/ievhenbondarew/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/ievhenbondarew/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/hibernate-core/5.5.7.Final/hibernate-core-5.5.7.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/ievhenbondarew/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/ievhenbondarew/.m2/repository/net/bytebuddy/byte-buddy/1.11.12/byte-buddy-1.11.12.jar:/Users/ievhenbondarew/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/ievhenbondarew/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/ievhenbondarew/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/ievhenbondarew/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/ievhenbondarew/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar, java.vm.vendor=BellSoft, sun.arch.data.model=64, java.vendor.url=https://bell-sw.com/, user.timezone=Europe/Kiev, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=UA, sun.boot.library.path=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11/lib, sun.java.command=Main, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/ievhenbondarew, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.11+9-LTS, user.name=ievhenbondarew, path.separator=:, hibernate.connection.username=****, os.version=11.4, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/ievhenbondarew, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bell-sw.com/support, java.io.tmpdir=/var/folders/t2/y3sz4nhj1rsgzf_xlsrnth7c0000gn/T/, java.version=11.0.11, user.dir=/Users/ievhenbondarew/Desktop/homework, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@742d4e15, java.library.path=/Users/ievhenbondarew/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=BellSoft, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
2021-09-26 00:42:12 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-09-26 00:42:12 DEBUG SessionFactoryImpl:309 - Instantiated session factory
2021-09-26 00:42:12 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@654b72c0]
2021-09-26 00:42:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:42:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:42:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:42:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:42:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:42:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Account
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4005 -  Version select: select id from accounts where id =?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-09-26 00:42:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573284a5]
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-09-26 00:42:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:42:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:42:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Account)
    - Returns
       - EntityReturnImpl(entity=entities.Account, querySpaceUid=<gen:0>, path=entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-09-26 00:42:12 DEBUG EntityLoader:129 - Static select for entity entities.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Status
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4005 -  Version select: select id from statuses where id =?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-09-26 00:42:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@783115d9]
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-09-26 00:42:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:42:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:42:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Status)
    - Returns
       - EntityReturnImpl(entity=entities.Status, querySpaceUid=<gen:0>, path=entities.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-09-26 00:42:12 DEBUG EntityLoader:129 - Static select for entity entities.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Client
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4005 -  Version select: select id from clients where id =?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.age as age3_1_, client_.email as email4_1_, client_.name as name5_1_, client_.phone as phone6_1_ from clients client_ where client_.id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, age, email, name, phone, id) values (?, ?, ?, ?, ?, ?)
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, age=?, email=?, name=?, phone=? where id=?
2021-09-26 00:42:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-09-26 00:42:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@95bb2a2]
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : age
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-09-26 00:42:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-09-26 00:42:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:42:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:42:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Client)
    - Returns
       - EntityReturnImpl(entity=entities.Client, querySpaceUid=<gen:0>, path=entities.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-09-26 00:42:12 DEBUG EntityLoader:129 - Static select for entity entities.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.age as age3_1_0_, client0_.email as email4_1_0_, client0_.name as name5_1_0_, client0_.phone as phone6_1_0_ from clients client0_ where client0_.id=?
2021-09-26 00:42:12 DEBUG SchemaManagementToolCoordinator:65 - No actions specified; doing nothing
2021-09-26 00:42:12 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-09-26 00:42:12 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-09-26 00:42:12 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:42:12 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4096aa05
2021-09-26 00:42:12 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: dc87eb02-5cf4-44f4-842a-9e9ebc3bded2 (<unnamed>)
2021-09-26 00:42:12 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-09-26 00:42:12 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-09-26 00:42:12 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@260a3a5e
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where id =6
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '6'

2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:42:12 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:42:12 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> client0_.id
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:42:12 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.id {synthetic-alias} id ) 6 ) ) )
2021-09-26 00:42:12 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:42:12 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:42:12 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '6'

2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where id =6
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:42:12 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:42:12 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#6]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#6]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = ikea@ukr.net
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ikea
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089095
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#6]
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where phone =380958089091
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'phone'
          \-[NUM_INT] Node: '380958089091'

2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:42:12 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:42:12 DEBUG DotNode:696 - getDataType() : phone -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.phone -> client0_.phone
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:42:12 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.phone {synthetic-alias} phone ) 380958089091 ) ) )
2021-09-26 00:42:12 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:42:12 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.phone
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: phone
          \-LiteralNode

2021-09-26 00:42:12 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.phone' {propertyName=phone,dereferenceType=PRIMITIVE,getPropertyPath=phone,path={synthetic-alias}.phone,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'phone' {originalText=phone}
          \-[NUM_INT] LiteralNode: '380958089091'

2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where phone =380958089091
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089091
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089091
2021-09-26 00:42:12 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:42:12 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#2]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#2]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = alex@ukr.net
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ali
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089091
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#2]
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:42:12 DEBUG TransactionImpl:81 - begin
2021-09-26 00:42:12 DEBUG AbstractSaveEventListener:128 - Generated identifier: 11, using strategy: org.hibernate.id.Assigned
2021-09-26 00:42:12 DEBUG TransactionImpl:98 - committing
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:114 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:42:12 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:42:12 DEBUG EntityPrinter:117 - entities.Client{phone=0, about=new, name=Ik, id=11, age=21, email=uuu@ukr.net}
2021-09-26 00:42:12 DEBUG SQL:144 - insert into clients (about, age, email, name, phone, id) values (?, ?, ?, ?, ?, ?)
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:42:12 DEBUG TransactionImpl:81 - begin
2021-09-26 00:42:12 DEBUG SQL:144 - select client_.id, client_.about as about2_1_, client_.age as age3_1_, client_.email as email4_1_, client_.name as name5_1_, client_.phone as phone6_1_ from clients client_ where client_.id=?
2021-09-26 00:42:12 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-09-26 00:42:12 DEBUG TransactionImpl:98 - committing
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:42:12 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:42:12 DEBUG EntityPrinter:117 - entities.Client{phone=0, about=new, name=Ik, id=11, age=21, email=uuu@ukr.net}
2021-09-26 00:42:12 DEBUG SQL:144 - delete from clients where id=?
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2021-09-26 00:42:12 DEBUG ClientDAO:84 - Connected with database
2021-09-26 00:42:12 DEBUG ClientDAO:100 - Find all clients executed
2021-09-26 00:42:12 DEBUG AccountService:23 - AccountDao configured
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Account where id =5
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '5'

2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:42:12 DEBUG FromElement:153 - FromClause{level=1} : entities.Account (<no alias>) -> account0_
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:42:12 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> account0_.id
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:42:12 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} accounts account0_ ) ( where ( = ( account0_.id {synthetic-alias} id ) 5 ) ) )
2021-09-26 00:42:12 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:42:12 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [accounts]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Account)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Account)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Account)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:42:12 DEBUG JoinProcessor:304 - Using FROM fragment [accounts account0_]
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (accounts)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'account0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'accounts account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=account0_,className=entities.Account,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '5'

2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Account where id =5
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:259 - SQL: select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG SQL:144 - select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:42:12 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:42:12 DEBUG Loader:1595 - Result row: EntityKey[entities.Account#5]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Account#5]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `clientId` : value = 5
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`clientId`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `number` : value = UA2132231300000266
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`number`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `value` : value = 220000.0
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`value`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Account#5]
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG StatusService:23 - StatusDao configured
2021-09-26 00:42:12 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:42:12 DEBUG TransactionImpl:81 - begin
2021-09-26 00:42:12 DEBUG TransactionImpl:98 - committing
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-09-26 00:42:12 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:42:12 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:42:12 DEBUG EntityPrinter:117 - entities.Status{alias=BUSINESS, description=MASTERCARD PLATINUM, id=3}
2021-09-26 00:42:12 DEBUG SQL:144 - update statuses set alias=?, description=? where id=?
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Status where id =3
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '3'

2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:42:12 DEBUG FromElement:153 - FromClause{level=1} : entities.Status (<no alias>) -> status0_
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:42:12 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:42:12 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> status0_.id
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:42:12 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} statuses status0_ ) ( where ( = ( status0_.id {synthetic-alias} id ) 3 ) ) )
2021-09-26 00:42:12 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:42:12 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Status): [statuses]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Status)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Status)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Status)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:42:12 DEBUG JoinProcessor:304 - Using FROM fragment [statuses status0_]
2021-09-26 00:42:12 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (statuses)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'status0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}}
    |  \-[SQL_TOKEN] SqlFragment: 'status0_.alias as alias2_2_, status0_.description as descript3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[status0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'statuses status0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'status0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=status0_,className=entities.Status,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '3'

2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Status where id =3
2021-09-26 00:42:12 DEBUG QueryTranslatorImpl:259 - SQL: select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:42:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:42:12 DEBUG SQL:144 - select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:42:12 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:42:12 DEBUG Loader:1595 - Result row: EntityKey[entities.Status#3]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Status#3]
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `alias` : value = BUSINESS
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:184 - Processing attribute `description` : value = MASTERCARD PLATINUM
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:215 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-09-26 00:42:12 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Status#3]
2021-09-26 00:42:12 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:42:12 INFO  Main:49 - MainClass works
2021-09-26 00:43:34 DEBUG ClientService:22 - ClientDao configured
2021-09-26 00:43:34 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-09-26 00:43:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:43:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:43:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:43:34 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.5.7.Final
2021-09-26 00:43:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-09-26 00:43:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-09-26 00:43:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-09-26 00:43:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-09-26 00:43:34 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-09-26 00:43:34 DEBUG Configuration:672 - Building session factory using provided StandardServiceRegistry
2021-09-26 00:43:34 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-09-26 00:43:34 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-09-26 00:43:34 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@189cbd7c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@239105a8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@560348e6
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@37911f88
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2cb2fc20
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ea2bc93
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@748741cb
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50313382
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@329dbdbf
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b72cb8a
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c39680d
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@24c4ddae
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51c693d
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28b46423
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1863d2fe
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@26df6e3a
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1b8a29df
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@11bb571c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57576994
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c669da8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3b74ac8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b175c00
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@df6620a
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@662706a7
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30bce90b
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4816278d
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45d2ade3
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@147a5d08
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b45c0e
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e3d57c7
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5082d622
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3370f42
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9f4771
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c0d7c83
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b8b43c7
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@41294f8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@488d1cd7
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7ceb3185
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@20f5281c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bd39d3c
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@768fc0f2
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4ddbbdf8
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79dc5318
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74a6f9c1
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f107c50
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7393222f
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@600b9d27
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@457c9034
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7daa0fbd
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@481ba2cf
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@be68757
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d446ed1
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12d2ce03
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7e5c856f
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@413f69cc
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f53a5dc
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b75c2e3
2021-09-26 00:43:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1984b1f
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-09-26 00:43:34 DEBUG DefaultIdentifierGeneratorFactory:99 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-09-26 00:43:34 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-09-26 00:43:34 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/ievhenbondarew]
2021-09-26 00:43:34 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=postgres}
2021-09-26 00:43:34 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-09-26 00:43:34 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-09-26 00:43:34 INFO  DriverManagerConnectionProviderImpl:274 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-09-26 00:43:34 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.3
      major : 13
      minor : 3
2021-09-26 00:43:34 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.23
      major : 42
      minor : 2
2021-09-26 00:43:34 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-09-26 00:43:34 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-09-26 00:43:35 DEBUG IdentifierHelperBuilder:114 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-09-26 00:43:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-09-26 00:43:35 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:43:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3b956878
2021-09-26 00:43:35 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@71e693fa
2021-09-26 00:43:35 DEBUG TypeConfiguration$Scope:149 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@242aa8d9]
2021-09-26 00:43:35 DEBUG AnnotationMetadataSourceProcessorImpl:125 - Encountered a non-categorized annotated class [entities.ClientStatus]; ignoring
2021-09-26 00:43:35 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Client
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:43:35 DEBUG EntityBinder:431 - Import with entity name Client
2021-09-26 00:43:35 DEBUG EntityBinder:874 - Bind entity entities.Client on table clients
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:id]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:43:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:about]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property about
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=age, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property age with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:age]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for age
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property age
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:email]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property email
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:name]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property name
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Client:phone]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property phone
2021-09-26 00:43:35 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Account
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:43:35 DEBUG EntityBinder:431 - Import with entity name Account
2021-09-26 00:43:35 DEBUG EntityBinder:874 - Bind entity entities.Account on table accounts
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:id]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:43:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:clientId]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property clientId
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:number]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property number
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Account:value]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property value
2021-09-26 00:43:35 DEBUG AnnotationBinder:558 - Binding entity from annotated class: entities.Status
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-09-26 00:43:35 DEBUG EntityBinder:431 - Import with entity name Status
2021-09-26 00:43:35 DEBUG EntityBinder:874 - Bind entity entities.Status on table statuses
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:id]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property id
2021-09-26 00:43:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:alias]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property alias
2021-09-26 00:43:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-09-26 00:43:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-09-26 00:43:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entities.Status:description]
2021-09-26 00:43:35 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-09-26 00:43:35 DEBUG PropertyBinder:266 - Building property description
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for age
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-09-26 00:43:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-09-26 00:43:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-09-26 00:43:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-09-26 00:43:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-09-26 00:43:35 DEBUG SessionFactoryImpl:206 - Building session factory
2021-09-26 00:43:35 DEBUG Settings:68 - SessionFactory name : null
2021-09-26 00:43:35 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-09-26 00:43:35 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-09-26 00:43:35 DEBUG Settings:72 - Statistics: disabled
2021-09-26 00:43:35 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-09-26 00:43:35 DEBUG Settings:75 - Default entity-mode: pojo
2021-09-26 00:43:35 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-09-26 00:43:35 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-09-26 00:43:35 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-09-26 00:43:35 DEBUG Settings:80 - Default batch fetch size: -1
2021-09-26 00:43:35 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-09-26 00:43:35 DEBUG Settings:82 - Default null ordering: NONE
2021-09-26 00:43:35 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-09-26 00:43:35 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-09-26 00:43:35 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-09-26 00:43:35 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-09-26 00:43:35 DEBUG Settings:90 - Query language substitutions: {}
2021-09-26 00:43:35 DEBUG Settings:91 - Named query checking : enabled
2021-09-26 00:43:35 DEBUG Settings:93 - Second-level cache: disabled
2021-09-26 00:43:35 DEBUG Settings:94 - Second-level query cache: disabled
2021-09-26 00:43:35 DEBUG Settings:95 - Second-level query cache factory: null
2021-09-26 00:43:35 DEBUG Settings:96 - Second-level cache region prefix: null
2021-09-26 00:43:35 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-09-26 00:43:35 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-09-26 00:43:35 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-09-26 00:43:35 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-09-26 00:43:35 DEBUG Settings:102 - JDBC batch size: 15
2021-09-26 00:43:35 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-09-26 00:43:35 DEBUG Settings:104 - Scrollable result sets: enabled
2021-09-26 00:43:35 DEBUG Settings:105 - Wrap result sets: disabled
2021-09-26 00:43:35 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-09-26 00:43:35 DEBUG Settings:107 - JDBC result set fetch size: null
2021-09-26 00:43:35 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-09-26 00:43:35 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-09-26 00:43:35 DEBUG Settings:111 - JPA compliance - query : disabled
2021-09-26 00:43:35 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-09-26 00:43:35 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-09-26 00:43:35 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-09-26 00:43:35 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:43:35 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:43:35 DEBUG SessionFactoryImpl:268 - Session factory constructed with filter configurations : {}
2021-09-26 00:43:35 DEBUG SessionFactoryImpl:269 - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/ievhenbondarew/Desktop/homework/target/classes:/Users/ievhenbondarew/.m2/repository/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar:/Users/ievhenbondarew/.m2/repository/org/postgresql/postgresql/42.2.23/postgresql-42.2.23.jar:/Users/ievhenbondarew/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/ievhenbondarew/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/ievhenbondarew/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/hibernate-core/5.5.7.Final/hibernate-core-5.5.7.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/ievhenbondarew/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/ievhenbondarew/.m2/repository/net/bytebuddy/byte-buddy/1.11.12/byte-buddy-1.11.12.jar:/Users/ievhenbondarew/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/ievhenbondarew/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/ievhenbondarew/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/ievhenbondarew/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/ievhenbondarew/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/ievhenbondarew/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/ievhenbondarew/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/ievhenbondarew/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/ievhenbondarew/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar, java.vm.vendor=BellSoft, sun.arch.data.model=64, java.vendor.url=https://bell-sw.com/, user.timezone=Europe/Kiev, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=UA, sun.boot.library.path=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11/lib, sun.java.command=Main, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/ievhenbondarew, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=/Users/ievhenbondarew/Library/Java/JavaVirtualMachines/liberica-11.0.11, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.11+9-LTS, user.name=ievhenbondarew, path.separator=:, hibernate.connection.username=****, os.version=11.4, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/ievhenbondarew, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bell-sw.com/support, java.io.tmpdir=/var/folders/t2/y3sz4nhj1rsgzf_xlsrnth7c0000gn/T/, java.version=11.0.11, user.dir=/Users/ievhenbondarew/Desktop/homework, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@742d4e15, java.library.path=/Users/ievhenbondarew/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=BellSoft, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
2021-09-26 00:43:35 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-09-26 00:43:35 DEBUG SessionFactoryImpl:309 - Instantiated session factory
2021-09-26 00:43:35 DEBUG TypeConfiguration$Scope:154 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7be58f16] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@654b72c0]
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Account] is safe
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Account
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Status] is safe
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Status
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entities.Client] is safe
2021-09-26 00:43:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entities.Client
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Account
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4005 -  Version select: select id from accounts where id =?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-09-26 00:43:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573284a5]
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-09-26 00:43:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:43:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:43:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Account)
    - Returns
       - EntityReturnImpl(entity=entities.Account, querySpaceUid=<gen:0>, path=entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-09-26 00:43:35 DEBUG EntityLoader:129 - Static select for entity entities.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Status
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4005 -  Version select: select id from statuses where id =?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-09-26 00:43:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@783115d9]
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-09-26 00:43:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:43:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:43:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Status)
    - Returns
       - EntityReturnImpl(entity=entities.Status, querySpaceUid=<gen:0>, path=entities.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-09-26 00:43:35 DEBUG EntityLoader:129 - Static select for entity entities.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4000 - Static SQL for entity: entities.Client
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4005 -  Version select: select id from clients where id =?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:4008 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.age as age3_1_, client_.email as email4_1_, client_.name as name5_1_, client_.phone as phone6_1_ from clients client_ where client_.id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, age, email, name, phone, id) values (?, ?, ?, ?, ?, ?)
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, age=?, email=?, name=?, phone=? where id=?
2021-09-26 00:43:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-09-26 00:43:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@95bb2a2]
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : age
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-09-26 00:43:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-09-26 00:43:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-09-26 00:43:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-09-26 00:43:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entities.Client)
    - Returns
       - EntityReturnImpl(entity=entities.Client, querySpaceUid=<gen:0>, path=entities.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entities.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-09-26 00:43:35 DEBUG EntityLoader:129 - Static select for entity entities.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.age as age3_1_0_, client0_.email as email4_1_0_, client0_.name as name5_1_0_, client0_.phone as phone6_1_0_ from clients client0_ where client0_.id=?
2021-09-26 00:43:35 DEBUG SchemaManagementToolCoordinator:65 - No actions specified; doing nothing
2021-09-26 00:43:35 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-09-26 00:43:35 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-09-26 00:43:35 DEBUG SessionFactoryServiceRegistryImpl:92 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2021-09-26 00:43:35 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4096aa05
2021-09-26 00:43:35 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: a3ee9425-99d1-4fae-bcdc-2a8ada4752fb (<unnamed>)
2021-09-26 00:43:35 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-09-26 00:43:35 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-09-26 00:43:35 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@260a3a5e
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where id =6
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '6'

2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:43:35 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:43:35 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> client0_.id
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:43:35 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.id {synthetic-alias} id ) 6 ) ) )
2021-09-26 00:43:35 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:43:35 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:43:35 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '6'

2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where id =6
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.id=6
2021-09-26 00:43:35 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:43:35 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#6]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#6]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = ikea@ukr.net
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ikea
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089095
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#6]
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Client where phone =380958089097
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'phone'
          \-[NUM_INT] Node: '380958089097'

2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:43:35 DEBUG FromElement:153 - FromClause{level=1} : entities.Client (<no alias>) -> client0_
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:43:35 DEBUG DotNode:696 - getDataType() : phone -> org.hibernate.type.LongType@6692b6c6
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.phone -> client0_.phone
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:43:35 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( where ( = ( client0_.phone {synthetic-alias} phone ) 380958089097 ) ) )
2021-09-26 00:43:35 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:43:35 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Client)
          | path: {synthetic-alias}.phone
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: phone
          \-LiteralNode

2021-09-26 00:43:35 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=entities.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.phone' {propertyName=phone,dereferenceType=PRIMITIVE,getPropertyPath=phone,path={synthetic-alias}.phone,tableAlias=client0_,className=entities.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'phone' {originalText=phone}
          \-[NUM_INT] LiteralNode: '380958089097'

2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Client where phone =380958089097
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089097
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.age as age3_1_, client0_.email as email4_1_, client0_.name as name5_1_, client0_.phone as phone6_1_ from clients client0_ where client0_.phone=380958089097
2021-09-26 00:43:35 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:43:35 DEBUG Loader:1595 - Result row: EntityKey[entities.Client#8]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Client#8]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `about` : value = new client
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `age` : value = 20
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`age`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `email` : value = ilda@ukr.net
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `name` : value = Ildar
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `phone` : value = 380958089097
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Client#8]
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:43:35 DEBUG TransactionImpl:81 - begin
2021-09-26 00:43:35 DEBUG AbstractSaveEventListener:128 - Generated identifier: 11, using strategy: org.hibernate.id.Assigned
2021-09-26 00:43:35 DEBUG TransactionImpl:98 - committing
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:114 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:43:35 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:43:35 DEBUG EntityPrinter:117 - entities.Client{phone=0, about=new, name=Ik, id=11, age=21, email=uuu@ukr.net}
2021-09-26 00:43:35 DEBUG SQL:144 - insert into clients (about, age, email, name, phone, id) values (?, ?, ?, ?, ?, ?)
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:43:35 DEBUG TransactionImpl:81 - begin
2021-09-26 00:43:35 DEBUG SQL:144 - select client_.id, client_.about as about2_1_, client_.age as age3_1_, client_.email as email4_1_, client_.name as name5_1_, client_.phone as phone6_1_ from clients client_ where client_.id=?
2021-09-26 00:43:35 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-09-26 00:43:35 DEBUG TransactionImpl:98 - committing
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:43:35 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:43:35 DEBUG EntityPrinter:117 - entities.Client{phone=0, about=new, name=Ik, id=11, age=21, email=uuu@ukr.net}
2021-09-26 00:43:35 DEBUG SQL:144 - delete from clients where id=?
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2021-09-26 00:43:35 DEBUG AccountService:23 - AccountDao configured
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Account where id =5
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '5'

2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:43:35 DEBUG FromElement:153 - FromClause{level=1} : entities.Account (<no alias>) -> account0_
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:43:35 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> account0_.id
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:43:35 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} accounts account0_ ) ( where ( = ( account0_.id {synthetic-alias} id ) 5 ) ) )
2021-09-26 00:43:35 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:43:35 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [accounts]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Account)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Account)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Account)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:43:35 DEBUG JoinProcessor:304 - Using FROM fragment [accounts account0_]
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (accounts)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'account0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'accounts account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=accounts,tableAlias=account0_,origin=null,columns={,className=entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=account0_,className=entities.Account,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '5'

2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Account where id =5
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:259 - SQL: select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG SQL:144 - select account0_.id as id1_0_, account0_.client_id as client_i2_0_, account0_.number as number3_0_, account0_.value as value4_0_ from accounts account0_ where account0_.id=5
2021-09-26 00:43:35 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:43:35 DEBUG Loader:1595 - Result row: EntityKey[entities.Account#5]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Account#5]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `clientId` : value = 5
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`clientId`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `number` : value = UA2132231300000266
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`number`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `value` : value = 220000.0
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`value`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Account#5]
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG StatusService:23 - StatusDao configured
2021-09-26 00:43:35 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-09-26 00:43:35 DEBUG TransactionImpl:81 - begin
2021-09-26 00:43:35 DEBUG TransactionImpl:98 - committing
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-09-26 00:43:35 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-09-26 00:43:35 DEBUG EntityPrinter:110 - Listing entities:
2021-09-26 00:43:35 DEBUG EntityPrinter:117 - entities.Status{alias=BUSINESS, description=MASTERCARD PLATINUM, id=3}
2021-09-26 00:43:35 DEBUG SQL:144 - update statuses set alias=?, description=? where id=?
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:292 - parse() - HQL: from entities.Status where id =3
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'entities'
    |           \-[IDENT] Node: 'Status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '3'

2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-09-26 00:43:35 DEBUG FromElement:153 - FromClause{level=1} : entities.Status (<no alias>) -> status0_
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-09-26 00:43:35 DEBUG DotNode:696 - getDataType() : id -> org.hibernate.type.IntegerType@1b266842
2021-09-26 00:43:35 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.id -> status0_.id
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-09-26 00:43:35 DEBUG HqlSqlWalker:762 - processQuery() :  ( SELECT ( FromClause{level=1} statuses status0_ ) ( where ( = ( status0_.id {synthetic-alias} id ) 3 ) ) )
2021-09-26 00:43:35 DEBUG HqlSqlWalker:1038 - Derived SELECT clause created.
2021-09-26 00:43:35 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Status): [statuses]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(entities.Status)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(entities.Status)
          | path: {synthetic-alias}.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(entities.Status)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-LiteralNode

2021-09-26 00:43:35 DEBUG JoinProcessor:304 - Using FROM fragment [statuses status0_]
2021-09-26 00:43:35 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (statuses)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'status0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}}
    |  \-[SQL_TOKEN] SqlFragment: 'status0_.alias as alias2_2_, status0_.description as descript3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[status0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'statuses status0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=statuses,tableAlias=status0_,origin=null,columns={,className=entities.Status}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'status0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path={synthetic-alias}.id,tableAlias=status0_,className=entities.Status,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '3'

2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:258 - HQL: from entities.Status where id =3
2021-09-26 00:43:35 DEBUG QueryTranslatorImpl:259 - SQL: select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:43:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-09-26 00:43:35 DEBUG SQL:144 - select status0_.id as id1_2_, status0_.alias as alias2_2_, status0_.description as descript3_2_ from statuses status0_ where status0_.id=3
2021-09-26 00:43:35 DEBUG Loader:384 - Result set row: 0
2021-09-26 00:43:35 DEBUG Loader:1595 - Result row: EntityKey[entities.Status#3]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:171 - Resolving attributes for [entities.Status#3]
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `alias` : value = BUSINESS
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:184 - Processing attribute `description` : value = MASTERCARD PLATINUM
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:215 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-09-26 00:43:35 DEBUG TwoPhaseLoad:352 - Done materializing entity [entities.Status#3]
2021-09-26 00:43:35 DEBUG LogicalConnectionManagedImpl:174 - Initiating JDBC connection release from afterTransaction
2021-09-26 00:43:35 INFO  Main:49 - MainClass works
